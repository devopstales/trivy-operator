name: Release
on:
  push:
    tags:
      - "*.*"

jobs:
  deploy:
    name: Deploy documentation
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true
      - run: |
          echo "TRIVY=$(curl --silent https://api.github.com/repos/aquasecurity/trivy/releases/latest | jq -r .name | cut -d 'v' -f2)" >> $GITHUB_ENV
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Prepare
        id: prep
        run: |
          # amd64
          wget -q -O /tmp/trivy.tar.gz https://github.com/aquasecurity/trivy/releases/download/v$TRIVY/trivy_"$TRIVY"_Linux-64bit.tar.gz
          tar -C /tmp -xf /tmp/trivy.tar.gz
          mkdir docker/amd64
          cp /tmp/trivy docker/arm64v8/trivy
          cp trivy-operator.py docker/trivy-operator.py
          rm -f /tmp/trivy.tar.gz /tmp/trivy
          # arm64v8
          wget -q -O /tmp/trivy.tar.gz https://github.com/aquasecurity/trivy/releases/download/v$TRIVY/trivy_"$TRIVY"_Linux-ARM64.tar.gz
          tar -C /tmp -xf /tmp/trivy.tar.gz
          mkdir docker/arm64v8
          cp /tmp/trivy docker/arm64v8/trivy
          rm -f /tmp/trivy.tar.gz /tmp/trivy
      - name: Build amd64
        uses: docker/build-push-action@v2
        with:
          context: docker/
          build-args:
            ARCH=amd64/
          tags: devopstales/trivy-operator:${{github.ref_name}}-amd64
          push: true
      - name: Build arm64v8
        uses: docker/build-push-action@v2
        with:
          context: docker/
          build-args:
            ARCH=arm64v8/
          tags: devopstales/trivy-operator:${{github.ref_name}}-arm64v8
          push: true
      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@master
        with:
          base-image: devopstales/trivy-operator:${{github.ref_name}}
          extra-images: devopstales/trivy-operator:${{github.ref_name}}-amd64,devopstales/trivy-operator:${{github.ref_name}}-arm64v8
          push: true
